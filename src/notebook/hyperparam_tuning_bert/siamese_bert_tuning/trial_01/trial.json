{"trial_id": "01", "hyperparameters": {"space": [{"class_name": "Int", "config": {"name": "dense1_units", "default": null, "conditions": [], "min_value": 128, "max_value": 512, "step": 64, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "dense2_units", "default": null, "conditions": [], "min_value": 64, "max_value": 256, "step": 32, "sampling": "linear"}}, {"class_name": "Float", "config": {"name": "dropout1", "default": 0.2, "conditions": [], "min_value": 0.2, "max_value": 0.5, "step": 0.1, "sampling": "linear"}}, {"class_name": "Float", "config": {"name": "l2_reg", "default": 0.001, "conditions": [], "min_value": 0.001, "max_value": 0.01, "step": null, "sampling": "log"}}, {"class_name": "Float", "config": {"name": "dropout2", "default": 0.2, "conditions": [], "min_value": 0.2, "max_value": 0.5, "step": 0.1, "sampling": "linear"}}, {"class_name": "Float", "config": {"name": "alpha", "default": 0.2, "conditions": [], "min_value": 0.2, "max_value": 0.8, "step": 0.2, "sampling": "linear"}}, {"class_name": "Float", "config": {"name": "learning_rate", "default": 0.0001, "conditions": [], "min_value": 0.0001, "max_value": 0.01, "step": null, "sampling": "log"}}], "values": {"dense1_units": 320, "dense2_units": 160, "dropout1": 0.4, "l2_reg": 0.0012134108854835075, "dropout2": 0.4, "alpha": 0.4, "learning_rate": 0.006793126018218034}}, "metrics": {"metrics": {}}, "score": null, "best_step": 0, "status": "FAILED", "message": "Traceback (most recent call last):\n  File \"/home/laccan/IdeaProjects/machine-learning/.venv/lib/python3.12/site-packages/keras_tuner/src/engine/base_tuner.py\", line 274, in _try_run_and_update_trial\n    self._run_and_update_trial(trial, *fit_args, **fit_kwargs)\n  File \"/home/laccan/IdeaProjects/machine-learning/.venv/lib/python3.12/site-packages/keras_tuner/src/engine/base_tuner.py\", line 239, in _run_and_update_trial\n    results = self.run_trial(trial, *fit_args, **fit_kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/laccan/IdeaProjects/machine-learning/.venv/lib/python3.12/site-packages/keras_tuner/src/engine/tuner.py\", line 314, in run_trial\n    obj_value = self._build_and_fit_model(trial, *args, **copied_kwargs)\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/laccan/IdeaProjects/machine-learning/.venv/lib/python3.12/site-packages/keras_tuner/src/engine/tuner.py\", line 233, in _build_and_fit_model\n    results = self.hypermodel.fit(hp, model, *args, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/laccan/IdeaProjects/machine-learning/.venv/lib/python3.12/site-packages/keras_tuner/src/engine/hypermodel.py\", line 149, in fit\n    return model.fit(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/laccan/IdeaProjects/machine-learning/.venv/lib/python3.12/site-packages/keras/src/utils/traceback_utils.py\", line 122, in error_handler\n    raise e.with_traceback(filtered_tb) from None\n  File \"/home/laccan/IdeaProjects/machine-learning/.venv/lib/python3.12/site-packages/tensorflow/python/eager/execute.py\", line 59, in quick_execute\n    except TypeError as e:\ntensorflow.python.framework.errors_impl.InvalidArgumentError: Graph execution error:\n\nDetected at node PyFunc defined at (most recent call last):\n<stack traces unavailable>\nValueError: Cannot take a larger sample than population when 'replace=False'\nTraceback (most recent call last):\n\n  File \"/home/laccan/IdeaProjects/machine-learning/.venv/lib/python3.12/site-packages/tensorflow/python/ops/script_ops.py\", line 269, in __call__\n    ret = func(*args)\n          ^^^^^^^^^^^\n\n  File \"/home/laccan/IdeaProjects/machine-learning/.venv/lib/python3.12/site-packages/tensorflow/python/autograph/impl/api.py\", line 643, in wrapper\n    return func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n\n  File \"/home/laccan/IdeaProjects/machine-learning/.venv/lib/python3.12/site-packages/tensorflow/python/data/ops/from_generator_op.py\", line 198, in generator_py_func\n    values = next(generator_state.get_iterator(iterator_id))\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n  File \"/tmp/ipykernel_8033/2407795921.py\", line 37, in triplet_generator\n    for a, p, n in get_batch(batch_size, dataset, unique_labels, label_indices_map, get_embed):\n\n  File \"/tmp/ipykernel_8033/2407795921.py\", line 11, in get_batch\n    a, p, n = get_triplets(unique_labels, label_indices_map)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n  File \"/tmp/ipykernel_8033/2407795921.py\", line 3, in get_triplets\n    a, p = np.random.choice(label_indices_map[label_l], 2, replace=False)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n  File \"numpy/random/mtrand.pyx\", line 1024, in numpy.random.mtrand.RandomState.choice\n\nValueError: Cannot take a larger sample than population when 'replace=False'\n\n\n\t [[{{node PyFunc}}]]\n\t [[IteratorGetNext]] [Op:__inference_multi_step_on_iterator_21896]\n"}